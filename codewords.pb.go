// Code generated by protoc-gen-go. DO NOT EDIT.
// source: codewords.proto

package codewords

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CodewordsRequest struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodewordsRequest) Reset()         { *m = CodewordsRequest{} }
func (m *CodewordsRequest) String() string { return proto.CompactTextString(m) }
func (*CodewordsRequest) ProtoMessage()    {}
func (*CodewordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_codewords_12bdc1d4b3346642, []int{0}
}
func (m *CodewordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodewordsRequest.Unmarshal(m, b)
}
func (m *CodewordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodewordsRequest.Marshal(b, m, deterministic)
}
func (dst *CodewordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodewordsRequest.Merge(dst, src)
}
func (m *CodewordsRequest) XXX_Size() int {
	return xxx_messageInfo_CodewordsRequest.Size(m)
}
func (m *CodewordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CodewordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CodewordsRequest proto.InternalMessageInfo

func (m *CodewordsRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type CodewordsResponse struct {
	Words                []string `protobuf:"bytes,2,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodewordsResponse) Reset()         { *m = CodewordsResponse{} }
func (m *CodewordsResponse) String() string { return proto.CompactTextString(m) }
func (*CodewordsResponse) ProtoMessage()    {}
func (*CodewordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_codewords_12bdc1d4b3346642, []int{1}
}
func (m *CodewordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodewordsResponse.Unmarshal(m, b)
}
func (m *CodewordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodewordsResponse.Marshal(b, m, deterministic)
}
func (dst *CodewordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodewordsResponse.Merge(dst, src)
}
func (m *CodewordsResponse) XXX_Size() int {
	return xxx_messageInfo_CodewordsResponse.Size(m)
}
func (m *CodewordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CodewordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CodewordsResponse proto.InternalMessageInfo

func (m *CodewordsResponse) GetWords() []string {
	if m != nil {
		return m.Words
	}
	return nil
}

func init() {
	proto.RegisterType((*CodewordsRequest)(nil), "CodewordsRequest")
	proto.RegisterType((*CodewordsResponse)(nil), "CodewordsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CodewordsServiceClient is the client API for CodewordsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CodewordsServiceClient interface {
	GetCodewords(ctx context.Context, in *CodewordsRequest, opts ...grpc.CallOption) (*CodewordsResponse, error)
}

type codewordsServiceClient struct {
	cc *grpc.ClientConn
}

func NewCodewordsServiceClient(cc *grpc.ClientConn) CodewordsServiceClient {
	return &codewordsServiceClient{cc}
}

func (c *codewordsServiceClient) GetCodewords(ctx context.Context, in *CodewordsRequest, opts ...grpc.CallOption) (*CodewordsResponse, error) {
	out := new(CodewordsResponse)
	err := c.cc.Invoke(ctx, "/CodewordsService/GetCodewords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CodewordsServiceServer is the server API for CodewordsService service.
type CodewordsServiceServer interface {
	GetCodewords(context.Context, *CodewordsRequest) (*CodewordsResponse, error)
}

func RegisterCodewordsServiceServer(s *grpc.Server, srv CodewordsServiceServer) {
	s.RegisterService(&_CodewordsService_serviceDesc, srv)
}

func _CodewordsService_GetCodewords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CodewordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CodewordsServiceServer).GetCodewords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CodewordsService/GetCodewords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CodewordsServiceServer).GetCodewords(ctx, req.(*CodewordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CodewordsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CodewordsService",
	HandlerType: (*CodewordsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCodewords",
			Handler:    _CodewordsService_GetCodewords_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "codewords.proto",
}

func init() { proto.RegisterFile("codewords.proto", fileDescriptor_codewords_12bdc1d4b3346642) }

var fileDescriptor_codewords_12bdc1d4b3346642 = []byte{
	// 135 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xce, 0x4f, 0x49,
	0x2d, 0xcf, 0x2f, 0x4a, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xd2, 0xe0, 0x12, 0x70,
	0x86, 0x09, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x89, 0x70, 0xb1, 0x26, 0xe7, 0x97,
	0xe6, 0x95, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x41, 0x38, 0x4a, 0x9a, 0x5c, 0x82, 0x48,
	0x2a, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x41, 0x4a, 0xc1, 0x02, 0x12, 0x4c, 0x0a, 0xcc, 0x1a,
	0x9c, 0x41, 0x10, 0x8e, 0x91, 0x37, 0x92, 0xa1, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42,
	0xe6, 0x5c, 0x3c, 0xee, 0xa9, 0x25, 0x70, 0x61, 0x21, 0x41, 0x3d, 0x74, 0x7b, 0xa5, 0x84, 0xf4,
	0x30, 0x2c, 0x50, 0x62, 0x48, 0x62, 0x03, 0x3b, 0xd4, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x93,
	0x68, 0x1f, 0x02, 0xbb, 0x00, 0x00, 0x00,
}
